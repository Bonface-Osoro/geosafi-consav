png(path, units="in", width=8, height=12, res=300)
print(signal_plots)
signal_plots <- ggarrange(path_loss, Received_Power, sinr_db, spectral_efficiency,
nrow = 2,
common.legend = TRUE, legend='bottom')
path = file.path(folder, 'figures', 'signal_plots.png')
png(path, units="in", width=8, height=12, res=300)
print(signal_plots)
dev.off()
data <- read.csv(file.path(folder, '..', 'results', 'cellular', 'mobile_capacity_results.csv'))
data <- data %>%
filter(cell_generation == "4G")
data$frequency_mhz = factor(
data$frequency_mhz,
levels = c(700, 800, 850, 900, 1800, 2100, 2300, 2500, 2600, 3500, 5800),
labels = c('0.7 GHz', '0.8 GHz', '0.85 GHz', '0.9 GHz', '1.8 GHz', '2.1 GHz', '2.3 GHz',
'2.5 GHz', '2.6 GHz', '3.5 GHz', '5.8 GHz'))
data$discrete <- cut(data$trans_user_dist_km, seq(0,50,5))
data$continuous = ""
data$continuous[data$discrete == '(0,5]'] <- 2.5
data$continuous[data$discrete == '(5,10]'] <- 7.5
data$continuous[data$discrete == '(10,15]'] <- 12.5
data$continuous[data$discrete == '(15,20]'] <- 17.5
data$continuous[data$discrete == '(20,25]'] <- 22.5
data$continuous[data$discrete == '(25,30]'] <- 27.5
data$continuous[data$discrete == '(30,35]'] <- 32.5
data$continuous[data$discrete == '(35,40]'] <- 37.5
data$continuous[data$discrete == '(40,45]'] <- 42.5
data$continuous[data$discrete == '(45,50]'] <- 47.5
df = select(data, path_loss_db, frequency_mhz,
continuous)
df$continuous = as.numeric(df$continuous)
df = df %>%
group_by(frequency_mhz, continuous) %>%
summarise(
mean = mean(path_loss_db),
sd = sd(path_loss_db))
######################################
##plot1 = Path Loss power line plot ##
######################################
path_loss <- ggplot(df, aes(continuous, mean, color = frequency_mhz)) +
geom_line(position = position_dodge(width = 0.5), size = 0.3) +
geom_point(size = 1, position=position_dodge(0.5)) +
labs( colour = NULL,
title = "Path Loss.",x = "Transmitter-User Distance (km)",
y = "Path Loss (dB)",
fill = "Frequency") +
scale_color_brewer(palette = "Set3") +
theme(
legend.position = 'bottom',
axis.text.x = element_text(size = 10),
panel.spacing = unit(0.6, "lines"),
plot.title = element_text(size = 15, face = "bold"),
plot.subtitle = element_text(size = 13),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 9),
axis.title.x = element_text(size = 10)) +
guides(fill = guide_legend(ncol = 5))
####################
## Received power ##
####################
df1 = select(data, received_power_db, frequency_mhz,
continuous)
df1$continuous = as.numeric(df1$continuous)
df1 = df1 %>%
group_by(frequency_mhz, continuous) %>%
summarise(
mean = mean(received_power_db),
sd = sd(received_power_db))
Received_Power <- ggplot(df1, aes(continuous, mean, color = frequency_mhz)) +
geom_line(position = position_dodge(width = 0.5), size = 0.3) +
geom_point(size = 1, position=position_dodge(0.5)) +
labs( colour = NULL,
title = "Received Power.",x = "Transmitter-User Distance (km)",
y = "Received Power (dB)",
fill = "Frequency") +
scale_color_brewer(palette = "Set3") +
theme(legend.position = 'bottom',
axis.text.x = element_text(size = 10),
panel.spacing = unit(0.6, "lines"),
plot.title = element_text(size = 15, face = "bold"),
plot.subtitle = element_text(size = 13),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 9),
axis.title.x = element_text(size = 10)) +
guides(fill = guide_legend(ncol = 5))
##########
## SINR ##
##########
df2 = select(data, cnr_db, frequency_mhz,
continuous)
df2$continuous = as.numeric(df2$continuous)
df2 = df2 %>%
group_by(frequency_mhz, continuous) %>%
summarise(
mean = mean(cnr_db),
sd = sd(cnr_db))
sinr_db <- ggplot(df2, aes(continuous, mean, color = frequency_mhz)) +
geom_line(position = position_dodge(width = 0.5), size = 0.3) +
geom_point(size = 1, position=position_dodge(0.5)) +
labs( colour = NULL,
title = "SINR.",x = "Transmitter-User Distance (km)",
y = "SINR (dB)",
fill = "Frequency") +
scale_color_brewer(palette = "Set3") +
theme(legend.position = 'bottom',
axis.text.x = element_text(size = 10),
panel.spacing = unit(0.6, "lines"),
plot.title = element_text(size = 15, face = "bold"),
plot.subtitle = element_text(size = 13),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 9),
axis.title.x = element_text(size = 10)) +
guides(fill = guide_legend(ncol = 5))
#########################
## Spectral Efficiency ##
#########################
df3 = select(data, spectral_efficiency_bpshz, frequency_mhz,
continuous)
df3$continuous = as.numeric(df3$continuous)
df3 = df3 %>%
group_by(frequency_mhz, continuous) %>%
summarise(
mean = mean(spectral_efficiency_bpshz),
sd = sd(spectral_efficiency_bpshz))
spectral_efficiency <- ggplot(df3, aes(continuous, mean, color = frequency_mhz)) +
geom_line(position = position_dodge(width = 0.5), size = 0.3) +
geom_point(size = 1, position=position_dodge(0.5)) +
labs( colour = NULL,
title = "Spectral Efficiency.",x = "Transmitter-User Distance (km)",
y = "Spectral Efficiency (Bps/Hz)",
fill = "Frequency") +
scale_color_brewer(palette = "Set3") +
theme(legend.position = 'bottom',
axis.text.x = element_text(size = 10),
panel.spacing = unit(0.6, "lines"),
plot.title = element_text(size = 15, face = "bold"),
plot.subtitle = element_text(size = 13),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 9),
axis.title.x = element_text(size = 10)) +
guides(fill = guide_legend(ncol = 5))
signal_plots <- ggarrange(path_loss, Received_Power, sinr_db, spectral_efficiency,
nrow = 2, ncol = 2,
common.legend = TRUE, legend='bottom')
path = file.path(folder, 'figures', 'signal_plots.png')
png(path, units="in", width=8, height=12, res=300)
print(signal_plots)
dev.off()
path = file.path(folder, 'figures', 'signal_plots.png')
png(path, units="in", width=7, height=9, res=300)
print(signal_plots)
dev.off()
####################
## SIGNAL RESULTS ##
####################
data <- read.csv(file.path(folder, '..', 'results', 'cellular', 'mobile_capacity_results.csv'))
data <- data %>%
filter(cell_generation == "4G")
data$frequency_mhz = factor(
data$frequency_mhz,
levels = c(700, 800, 850, 900, 1800, 2100, 2300, 2500, 2600, 3500, 5800),
labels = c('0.7 GHz', '0.8 GHz', '0.85 GHz', '0.9 GHz', '1.8 GHz', '2.1 GHz', '2.3 GHz',
'2.5 GHz', '2.6 GHz', '3.5 GHz', '5.8 GHz'))
data$discrete <- cut(data$trans_user_dist_km, seq(0,50,5))
data$continuous = ""
data$continuous[data$discrete == '(0,5]'] <- 2.5
data$continuous[data$discrete == '(5,10]'] <- 7.5
data$continuous[data$discrete == '(10,15]'] <- 12.5
data$continuous[data$discrete == '(15,20]'] <- 17.5
data$continuous[data$discrete == '(20,25]'] <- 22.5
data$continuous[data$discrete == '(25,30]'] <- 27.5
data$continuous[data$discrete == '(30,35]'] <- 32.5
data$continuous[data$discrete == '(35,40]'] <- 37.5
data$continuous[data$discrete == '(40,45]'] <- 42.5
data$continuous[data$discrete == '(45,50]'] <- 47.5
df = select(data, path_loss_db, frequency_mhz,
continuous)
df$continuous = as.numeric(df$continuous)
df = df %>%
group_by(frequency_mhz, continuous) %>%
summarise(
mean = mean(path_loss_db),
sd = sd(path_loss_db))
######################################
##plot1 = Path Loss power line plot ##
######################################
path_loss <- ggplot(df, aes(continuous, mean, color = frequency_mhz)) +
geom_line(position = position_dodge(width = 0.5), size = 0.3) +
geom_point(size = 1, position=position_dodge(0.5)) +
labs( colour = NULL,
title = "A",x = "Transmitter-User Distance (km)",
y = "Path Loss (dB)",
fill = "Frequency") +
scale_color_brewer(palette = "Set3") +
theme(
legend.position = 'bottom',
axis.text.x = element_text(size = 10),
panel.spacing = unit(0.6, "lines"),
plot.title = element_text(size = 15, face = "bold"),
plot.subtitle = element_text(size = 13),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 9),
axis.title.x = element_text(size = 10)) +
guides(fill = guide_legend(ncol = 5))
####################
## Received power ##
####################
df1 = select(data, received_power_db, frequency_mhz,
continuous)
df1$continuous = as.numeric(df1$continuous)
df1 = df1 %>%
group_by(frequency_mhz, continuous) %>%
summarise(
mean = mean(received_power_db),
sd = sd(received_power_db))
Received_Power <- ggplot(df1, aes(continuous, mean, color = frequency_mhz)) +
geom_line(position = position_dodge(width = 0.5), size = 0.3) +
geom_point(size = 1, position=position_dodge(0.5)) +
labs( colour = NULL,
title = "B",x = "Transmitter-User Distance (km)",
y = "Received Power (dB)",
fill = "Frequency") +
scale_color_brewer(palette = "Set3") +
theme(legend.position = 'bottom',
axis.text.x = element_text(size = 10),
panel.spacing = unit(0.6, "lines"),
plot.title = element_text(size = 15, face = "bold"),
plot.subtitle = element_text(size = 13),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 9),
axis.title.x = element_text(size = 10)) +
guides(fill = guide_legend(ncol = 5))
##########
## SINR ##
##########
df2 = select(data, cnr_db, frequency_mhz,
continuous)
df2$continuous = as.numeric(df2$continuous)
df2 = df2 %>%
group_by(frequency_mhz, continuous) %>%
summarise(
mean = mean(cnr_db),
sd = sd(cnr_db))
sinr_db <- ggplot(df2, aes(continuous, mean, color = frequency_mhz)) +
geom_line(position = position_dodge(width = 0.5), size = 0.3) +
geom_point(size = 1, position=position_dodge(0.5)) +
labs( colour = NULL,
title = "C",x = "Transmitter-User Distance (km)",
y = "SINR (dB)",
fill = "Frequency") +
scale_color_brewer(palette = "Set3") +
theme(legend.position = 'bottom',
axis.text.x = element_text(size = 10),
panel.spacing = unit(0.6, "lines"),
plot.title = element_text(size = 15, face = "bold"),
plot.subtitle = element_text(size = 13),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 9),
axis.title.x = element_text(size = 10)) +
guides(fill = guide_legend(ncol = 5))
#########################
## Spectral Efficiency ##
#########################
df3 = select(data, spectral_efficiency_bpshz, frequency_mhz,
continuous)
df3$continuous = as.numeric(df3$continuous)
df3 = df3 %>%
group_by(frequency_mhz, continuous) %>%
summarise(
mean = mean(spectral_efficiency_bpshz),
sd = sd(spectral_efficiency_bpshz))
spectral_efficiency <- ggplot(df3, aes(continuous, mean, color = frequency_mhz)) +
geom_line(position = position_dodge(width = 0.5), size = 0.3) +
geom_point(size = 1, position=position_dodge(0.5)) +
labs( colour = NULL,
title = "D",x = "Transmitter-User Distance (km)",
y = "Spectral Efficiency (Bps/Hz)",
fill = "Frequency") +
scale_color_brewer(palette = "Set3") +
theme(legend.position = 'bottom',
axis.text.x = element_text(size = 10),
panel.spacing = unit(0.6, "lines"),
plot.title = element_text(size = 15, face = "bold"),
plot.subtitle = element_text(size = 13),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 9),
axis.title.x = element_text(size = 10)) +
guides(fill = guide_legend(ncol = 5))
signal_plots <- ggarrange(path_loss, Received_Power, sinr_db, spectral_efficiency,
nrow = 2, ncol = 2,
common.legend = TRUE, legend='bottom')
path = file.path(folder, 'figures', 'signal_plots.png')
png(path, units="in", width=6, height=7, res=300)
print(signal_plots)
dev.off()
spectral_efficiency <- ggplot(df3, aes(continuous, mean, color = frequency_mhz)) +
geom_line(position = position_dodge(width = 0.5), size = 0.3) +
geom_point(size = 0.5, position=position_dodge(0.5)) +
labs( colour = NULL,
title = "D",x = "Transmitter-User Distance (km)",
y = "Spectral Efficiency (Bps/Hz)",
fill = "Frequency") +
scale_color_brewer(palette = "Set3") +
theme(legend.position = 'bottom',
axis.text.x = element_text(size = 10),
panel.spacing = unit(0.6, "lines"),
plot.title = element_text(size = 15, face = "bold"),
plot.subtitle = element_text(size = 13),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 9),
axis.title.x = element_text(size = 10)) +
guides(fill = guide_legend(ncol = 5))
signal_plots <- ggarrange(path_loss, Received_Power, sinr_db, spectral_efficiency,
nrow = 2, ncol = 2,
common.legend = TRUE, legend='bottom')
path = file.path(folder, 'figures', 'signal_plots.png')
png(path, units="in", width=6, height=7, res=300)
print(signal_plots)
dev.off()
spectral_efficiency <- ggplot(df3, aes(continuous, mean, color = frequency_mhz)) +
geom_line(position = position_dodge(width = 0.5), size = 0.3) +
geom_point(size = 0.2, position=position_dodge(0.5)) +
labs( colour = NULL,
title = "D",x = "Transmitter-User Distance (km)",
y = "Spectral Efficiency (Bps/Hz)",
fill = "Frequency") +
scale_color_brewer(palette = "Set3") +
theme(legend.position = 'bottom',
axis.text.x = element_text(size = 10),
panel.spacing = unit(0.6, "lines"),
plot.title = element_text(size = 15, face = "bold"),
plot.subtitle = element_text(size = 13),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 9),
axis.title.x = element_text(size = 10)) +
guides(fill = guide_legend(ncol = 5))
signal_plots <- ggarrange(path_loss, Received_Power, sinr_db, spectral_efficiency,
nrow = 2, ncol = 2,
common.legend = TRUE, legend='bottom')
path = file.path(folder, 'figures', 'signal_plots.png')
png(path, units="in", width=6, height=7, res=300)
print(signal_plots)
dev.off()
data <- read.csv(file.path(folder, '..', 'results', 'cellular', 'mobile_capacity_results.csv'))
data <- data %>%
filter(cell_generation == "4G")
data$frequency_mhz = factor(
data$frequency_mhz,
levels = c(700, 800, 850, 900, 1800, 2100, 2300, 2500, 2600, 3500, 5800),
labels = c('0.7 GHz', '0.8 GHz', '0.85 GHz', '0.9 GHz', '1.8 GHz', '2.1 GHz', '2.3 GHz',
'2.5 GHz', '2.6 GHz', '3.5 GHz', '5.8 GHz'))
data$discrete <- cut(data$trans_user_dist_km, seq(0,50,5))
data$continuous = ""
data$continuous[data$discrete == '(0,5]'] <- 2.5
data$continuous[data$discrete == '(5,10]'] <- 7.5
data$continuous[data$discrete == '(10,15]'] <- 12.5
data$continuous[data$discrete == '(15,20]'] <- 17.5
data$continuous[data$discrete == '(20,25]'] <- 22.5
data$continuous[data$discrete == '(25,30]'] <- 27.5
data$continuous[data$discrete == '(30,35]'] <- 32.5
data$continuous[data$discrete == '(35,40]'] <- 37.5
data$continuous[data$discrete == '(40,45]'] <- 42.5
data$continuous[data$discrete == '(45,50]'] <- 47.5
df = select(data, path_loss_db, frequency_mhz,
continuous)
df$continuous = as.numeric(df$continuous)
df = df %>%
group_by(frequency_mhz, continuous) %>%
summarise(
mean = mean(path_loss_db),
sd = sd(path_loss_db))
######################################
##plot1 = Path Loss power line plot ##
######################################
path_loss <- ggplot(df, aes(continuous, mean, color = frequency_mhz)) +
geom_line(position = position_dodge(width = 0.5), size = 0.3) +
geom_point(size = 0.3, position=position_dodge(0.5)) +
labs( colour = NULL,
title = "A",x = "Transmitter-User Distance (km)",
y = "Path Loss (dB)",
fill = "Frequency") +
scale_color_brewer(palette = "Set3") +
theme(
legend.position = 'bottom',
axis.text.x = element_text(size = 10),
panel.spacing = unit(0.6, "lines"),
plot.title = element_text(size = 15, face = "bold"),
plot.subtitle = element_text(size = 13),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 9),
axis.title.x = element_text(size = 10)) +
guides(fill = guide_legend(ncol = 5))
####################
## Received power ##
####################
df1 = select(data, received_power_db, frequency_mhz,
continuous)
df1$continuous = as.numeric(df1$continuous)
df1 = df1 %>%
group_by(frequency_mhz, continuous) %>%
summarise(
mean = mean(received_power_db),
sd = sd(received_power_db))
Received_Power <- ggplot(df1, aes(continuous, mean, color = frequency_mhz)) +
geom_line(position = position_dodge(width = 0.5), size = 0.3) +
geom_point(size = 0.3, position=position_dodge(0.5)) +
labs( colour = NULL,
title = "B",x = "Transmitter-User Distance (km)",
y = "Received Power (dB)",
fill = "Frequency") +
scale_color_brewer(palette = "Set3") +
theme(legend.position = 'bottom',
axis.text.x = element_text(size = 10),
panel.spacing = unit(0.6, "lines"),
plot.title = element_text(size = 15, face = "bold"),
plot.subtitle = element_text(size = 13),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 9),
axis.title.x = element_text(size = 10)) +
guides(fill = guide_legend(ncol = 5))
##########
## SINR ##
##########
df2 = select(data, cnr_db, frequency_mhz,
continuous)
df2$continuous = as.numeric(df2$continuous)
df2 = df2 %>%
group_by(frequency_mhz, continuous) %>%
summarise(
mean = mean(cnr_db),
sd = sd(cnr_db))
sinr_db <- ggplot(df2, aes(continuous, mean, color = frequency_mhz)) +
geom_line(position = position_dodge(width = 0.5), size = 0.3) +
geom_point(size = 0.3, position=position_dodge(0.5)) +
labs( colour = NULL,
title = "C",x = "Transmitter-User Distance (km)",
y = "SINR (dB)",
fill = "Frequency") +
scale_color_brewer(palette = "Set3") +
theme(legend.position = 'bottom',
axis.text.x = element_text(size = 10),
panel.spacing = unit(0.6, "lines"),
plot.title = element_text(size = 15, face = "bold"),
plot.subtitle = element_text(size = 13),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 9),
axis.title.x = element_text(size = 10)) +
guides(fill = guide_legend(ncol = 5))
#########################
## Spectral Efficiency ##
#########################
df3 = select(data, spectral_efficiency_bpshz, frequency_mhz,
continuous)
df3$continuous = as.numeric(df3$continuous)
df3 = df3 %>%
group_by(frequency_mhz, continuous) %>%
summarise(
mean = mean(spectral_efficiency_bpshz),
sd = sd(spectral_efficiency_bpshz))
spectral_efficiency <- ggplot(df3, aes(continuous, mean, color = frequency_mhz)) +
geom_line(position = position_dodge(width = 0.5), size = 0.3) +
geom_point(size = 0.3, position=position_dodge(0.5)) +
labs( colour = NULL,
title = "D",x = "Transmitter-User Distance (km)",
y = "Spectral Efficiency (Bps/Hz)",
fill = "Frequency") +
scale_color_brewer(palette = "Set3") +
theme(legend.position = 'bottom',
axis.text.x = element_text(size = 10),
panel.spacing = unit(0.6, "lines"),
plot.title = element_text(size = 15, face = "bold"),
plot.subtitle = element_text(size = 13),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 9),
axis.title.x = element_text(size = 10)) +
guides(fill = guide_legend(ncol = 5))
signal_plots <- ggarrange(path_loss, Received_Power, sinr_db, spectral_efficiency,
nrow = 2, ncol = 2,
common.legend = TRUE, legend='bottom')
path = file.path(folder, 'figures', 'signal_plots.png')
png(path, units="in", width=6, height=7, res=300)
print(signal_plots)
dev.off()
